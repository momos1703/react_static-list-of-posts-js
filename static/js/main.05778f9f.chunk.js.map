{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","commentInfo","className","name","href","email","body","CommentList","postComments","map","comment","UserInfo","user","PostInfo","post","title","comments","length","PostList","posts","id","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAYE,OAElD,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAYI,OAF9B,SAIGJ,EAAYI,WAIjB,qBAAKH,UAAU,oBAAf,SACGD,EAAYK,WCbNC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAAaC,KAAI,SAAAC,GAAO,OACvB,cAAC,EAAD,CAAaT,YAAaS,UCJnBC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,SCAGU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,qCACE,sBAAKZ,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,EAAKC,QAEtC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAIzB,mBAAGV,UAAU,iBAAb,SACGY,EAAKR,OAGkB,IAAzBQ,EAAKE,SAASC,OAEX,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,gCAIF,cAAC,EAAD,CAAaT,aAAcM,EAAKE,eC3B3BE,EAAW,SAAC,GAAD,SAAGC,MACnBV,KAAI,SAAAK,GAAI,OACZ,qBAAKZ,UAAU,WAAf,SACE,cAAC,EAAD,CAAUY,KAAMA,KADaA,EAAKM,QCYxC,IAAMD,EAAQE,EAAgBZ,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAXqBU,EAWDR,EAAKQ,OAVlBC,EAAgBC,MAAK,SAAAZ,GAAI,OAAIU,IAAWV,EAAKQ,OAC/C,MAULJ,UAPyBI,EAOGN,EAAKM,GAN1BK,EAAmBC,QAAO,SAAAhB,GAAO,OAAIU,IAAOV,EAAQiB,aAD7D,IAA2BP,EALJE,KAeVM,EAAM,kBACjB,0BAAS1B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUiB,MAAOA,QCtBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.05778f9f.chunk.js","sourcesContent":["export const CommentInfo = ({ commentInfo }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{commentInfo.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${commentInfo.email}`}\n      >\n        {commentInfo.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {commentInfo.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ postComments }) => (\n  <div className=\"CommentList\">\n    {postComments.map(comment => (\n      <CommentInfo commentInfo={comment} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <>\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    {post.comments.length === 0\n      ? (\n        <>\n          <hr />\n\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )\n      : (\n        <CommentList postComments={post.comments} />\n      )\n    }\n  </>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  posts.map(post => (\n    <div className=\"PostInfo\" key={post.id}>\n      <PostInfo post={post} />\n    </div>\n  ))\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserByPost(userId) {\n  return usersFromServer.find(user => userId === user.id)\n    || null;\n}\n\nfunction getCommentsByPost(id) {\n  return commentsFromServer.filter(comment => id === comment.postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserByPost(post.userId),\n  comments: getCommentsByPost(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n\n  </section>\n);\n","import ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}